{"version":3,"sources":["images/maciej_krasny.png","fonts/Roboto-Regular.ttf","side/styles/PortraitImage.styles.ts","side/components/PortraitImage.tsx","side/styles/NameTitle.styles.ts","side/components/NameTitle.tsx","side/styles/NameImageContainer.styles.ts","side/components/NameImageContainer.tsx","side/styles/Section.styles.ts","side/components/Section.tsx","devices/devices.ts","side/styles/InformationText.styles.ts","side/components/InformationText.tsx","side/styles/SkillsList.styles.ts","side/components/SkillsList.tsx","side/styles/SideMainElement.styles.ts","side/components/SideMainElement.tsx","board/styles/AboutMeCard.styles.ts","board/components/AboutMeCard.tsx","board/styles/TimeLine.styles.ts","board/components/TimeLine.tsx","board/styles/Board.styles.ts","board/components/Board.tsx","App.styles.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","StyledPortrait","styled","img","PortraitImage","src","maciej_krasny","alt","StyleNameTitle","h3","NameTitle","StyledNameImageContainer","div","NameImageContainer","props","children","Title","h5","SectionContent","Section","title","InformationTextContainer","StyledInformationText","span","devices","StyledInformationTextLink","a","InformationText","infoText","isLink","href","target","text","Icon","style","fontSize","icon","ListElement","li","SkillsList","elements","map","element","key","StyledSideMainElement","skills","SideMainElement","StyledCardView","CardView","TitleAvatar","Avatar","TitleIcon","CardTitle","ContentTitle","AboutMeText","Typography","AboutMeCard","CardHeader","avatar","backgroundColor","CardContent","welcomeText","variant","aboutMeText","TimeLineElement","DateRange","Description","TimeLine","index","marginTop","color","marginRight","dateRange","description","BoardContainer","StyledBoard","ExperienceList","ul","aboutMeElements","experienceTimeLineElements","educationTimeLineElements","projectsTimeLineElements","Board","StyledMain","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3047af9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maciej_krasny.b07cf5b8.png\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","import styled from \"styled-components\";\r\n\r\nconst StyledPortrait = styled.img`\r\n  width: 160px;\r\n  border-radius: 5%;\r\n`;\r\n\r\nexport { StyledPortrait };\r\n","import React, { FunctionComponent } from \"react\";\r\nimport maciej_krasny from \"./../../images/maciej_krasny.png\";\r\nimport { StyledPortrait } from \"../styles/PortraitImage.styles\";\r\n\r\nconst PortraitImage: FunctionComponent<{}> = () => {\r\n  return <StyledPortrait src={maciej_krasny} alt=\"portrait\" />;\r\n};\r\n\r\nexport default PortraitImage;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyleNameTitle = styled.h3`\r\n  font-family: Roboto;\r\n  margin-top: 16px;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport { StyleNameTitle };\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { StyleNameTitle } from \"../styles/NameTitle.styles\";\r\n\r\nconst NameTitle: FunctionComponent<{}> = () => {\r\n  return <StyleNameTitle>Maciej Kra≈õny</StyleNameTitle>;\r\n};\r\n\r\nexport default NameTitle;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledNameImageContainer = styled.div`\r\n  margin: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport { StyledNameImageContainer };\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { StyledNameImageContainer } from \"../styles/NameImageContainer.styles\";\r\n\r\nconst NameImageContainer: FunctionComponent<{}> = props => {\r\n  return <StyledNameImageContainer>{props.children}</StyledNameImageContainer>;\r\n};\r\n\r\nexport default NameImageContainer;\r\n","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h5`\r\n  margin-top: 32px;\r\n  margin-left: 8px;\r\n  font-family: Roboto;\r\n`;\r\n\r\nconst SectionContent = styled.div`\r\n  margin-right: 14px;\r\n  margin-left: 16px;\r\n  font-family: Roboto;\r\n`;\r\n\r\nexport { Title, SectionContent };\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Title, SectionContent } from \"../styles/Section.styles\";\r\n\r\nexport interface SectionProps {\r\n  title?: string;\r\n}\r\n\r\nconst Section: FunctionComponent<SectionProps> = props => {\r\n  return (\r\n    <>\r\n      <Title>{props.title}</Title>\r\n      <SectionContent>{props.children}</SectionContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","export default {\r\n    mobile: '600px',\r\n    tablet: '960px',\r\n    desktop: '1240px'\r\n};\r\n  ","import styled from \"styled-components\";\r\nimport devices from \"../../devices/devices\";\r\n\r\nconst InformationTextContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 8px;\r\n  margin-left: 8px;\r\n  margin-bottom: 8px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledInformationText = styled.span`\r\n  font-size: 16px;\r\n  font-family: Roboto;\r\n  margin-left: 16px;\r\n  @media (max-width: ${devices.tablet}) {\r\n    font-size: 14px;\r\n  }\r\n  @media (max-width: ${devices.mobile}) {\r\n    font-size: 16px;\r\n    margin-left: 32px;\r\n  }\r\n`;\r\n\r\nconst StyledInformationTextLink = styled.a`\r\n  font-size: 16px;\r\n  font-family: Roboto;\r\n  margin-left: 16px;\r\n  color: #ffffff;\r\n  &:hover {\r\n    color: #fafafa;\r\n  }\r\n  @media (max-width: ${devices.tablet}) {\r\n    font-size: 14px;\r\n  }\r\n  @media (max-width: ${devices.mobile}) {\r\n    font-size: 16px;\r\n    margin-left: 32px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  InformationTextContainer,\r\n  StyledInformationText,\r\n  StyledInformationTextLink\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport {\r\n  StyledInformationText,\r\n  InformationTextContainer,\r\n  StyledInformationTextLink\r\n} from \"./../styles/InformationText.styles\";\r\n\r\nexport interface InformationTextProps {\r\n  icon?: string;\r\n  text?: string;\r\n  isLink?: boolean;\r\n}\r\n\r\nconst InformationText: FunctionComponent<InformationTextProps> = props => {\r\n  const infoText: React.ReactElement = props.isLink ? (\r\n    <StyledInformationTextLink\r\n      href=\"https://github.com/maciejKrasny\"\r\n      target=\"_blank\"\r\n    >\r\n      {props.text}\r\n    </StyledInformationTextLink>\r\n  ) : (\r\n    <StyledInformationText>{props.text}</StyledInformationText>\r\n  );\r\n  return (\r\n    <InformationTextContainer>\r\n      <Icon style={{ fontSize: \"32px\" }}>{props.icon}</Icon>\r\n      {infoText}\r\n    </InformationTextContainer>\r\n  );\r\n};\r\n\r\nexport default InformationText;\r\n","import styled from \"styled-components\";\r\nimport devices from \"../../devices/devices\";\r\n\r\nconst ListElement = styled.li`\r\n  font-size: 16px;\r\n  font-family: Roboto;\r\n  @media (max-width: ${devices.tablet}) {\r\n    font-size: 14px;\r\n  }\r\n  @media (max-width: ${devices.mobile}) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport { ListElement };\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { ListElement } from \"../styles/SkillsList.styles\";\r\n\r\nexport interface SkillsListProps {\r\n  elements?: string[];\r\n}\r\n\r\nconst SkillsList: FunctionComponent<SkillsListProps> = props => {\r\n  const elements = props.elements?.map((element: string) => {\r\n    return <ListElement key={element}>{element}</ListElement>;\r\n  });\r\n  return <ul>{elements}</ul>;\r\n};\r\n\r\nexport default SkillsList;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledSideMainElement = styled.div`\r\n  background-color: #293846;\r\n  color: #ffffff;\r\n  padding: 8px;\r\n`;\r\n\r\nexport { StyledSideMainElement };\r\n","import React, { FunctionComponent } from \"react\";\r\nimport PortraitImage from \"./PortraitImage\";\r\nimport NameTitle from \"./NameTitle\";\r\nimport NameImageContainer from \"./NameImageContainer\";\r\nimport SideSection from \"./Section\";\r\nimport InformationText from \"./InformationText\";\r\nimport SkillsList from \"./SkillsList\";\r\nimport { StyledSideMainElement } from \"../styles/SideMainElement.styles\";\r\n\r\nconst skills: string[] = [\r\n  \"JavaScript, TypeScript\",\r\n  \"React, React Native\",\r\n  \"NodeJS, NestJS\",\r\n  \"Kotlin\",\r\n  \"GraphQl\",\r\n  \"Css\",\r\n  \"Html\",\r\n  \"Java, Spring\",\r\n  \"Python\",\r\n  \"Sql\",\r\n  \"C, C++\"\r\n];\r\nconst city: string = \"Pozna≈Ñ\";\r\nconst birthDate: string = \"1997-11-01\";\r\nconst email: string = \"maciej.krasny97@gmail.com\";\r\nconst github: string = \"github.com/maciejKrasny\";\r\n\r\nconst SideMainElement: FunctionComponent<{}> = () => {\r\n  return (\r\n    <StyledSideMainElement>\r\n      <NameImageContainer>\r\n        <PortraitImage />\r\n        <NameTitle />\r\n      </NameImageContainer>\r\n      <SideSection>\r\n        <InformationText text={city} icon=\"home_work\" />\r\n        <InformationText text={birthDate} icon=\"cake\" />\r\n      </SideSection>\r\n      <SideSection title=\"Kontakt\">\r\n        <InformationText text={email} icon=\"email\" />\r\n        <InformationText text={github} icon=\"code\" isLink />\r\n      </SideSection>\r\n      <SideSection title=\"Umiejƒôtno≈õci\">\r\n        <SkillsList elements={skills} />\r\n      </SideSection>\r\n    </StyledSideMainElement>\r\n  );\r\n};\r\n\r\nexport default SideMainElement;\r\n","import CardView from \"@material-ui/core/Card\";\r\nimport { Icon, Avatar, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCardView = styled(CardView)`\r\n  width: 100%;\r\n  font-family: Roboto;\r\n`;\r\n\r\nconst TitleAvatar = styled(Avatar)`\r\n  border: 1px solid #c5d1c8;\r\n`;\r\n\r\nconst TitleIcon = styled(Icon)`\r\n  color: #6f7872;\r\n`;\r\n\r\nconst CardTitle = styled.span`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ContentTitle = styled.span`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst AboutMeText = styled(Typography)`\r\n  font-size: 16px;\r\n`;\r\n\r\nexport {\r\n  StyledCardView,\r\n  TitleAvatar,\r\n  TitleIcon,\r\n  CardTitle,\r\n  ContentTitle,\r\n  AboutMeText\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Typography, CardContent } from \"@material-ui/core\";\r\nimport {\r\n  StyledCardView,\r\n  TitleAvatar,\r\n  TitleIcon,\r\n  CardTitle,\r\n  ContentTitle,\r\n  AboutMeText\r\n} from \"./../styles/AboutMeCard.styles\";\r\n\r\nexport interface AboutMeCardProps {\r\n  welcomeText?: string;\r\n  aboutMeText?: string;\r\n}\r\n\r\nconst AboutMeCard: FunctionComponent<AboutMeCardProps> = props => {\r\n  return (\r\n    <StyledCardView>\r\n      <CardHeader\r\n        avatar={\r\n          <TitleAvatar style={{ backgroundColor: \"#ffffff\" }}>\r\n            <TitleIcon>person</TitleIcon>\r\n          </TitleAvatar>\r\n        }\r\n        title={<CardTitle>O mnie</CardTitle>}\r\n      ></CardHeader>\r\n      <CardContent>\r\n        <Typography>\r\n          <ContentTitle>{props.welcomeText}</ContentTitle>\r\n        </Typography>\r\n        <AboutMeText variant=\"inherit\">{props.aboutMeText}</AboutMeText>\r\n      </CardContent>\r\n    </StyledCardView>\r\n  );\r\n};\r\n\r\nexport default AboutMeCard;\r\n","import CardView from \"@material-ui/core/Card\";\r\nimport { Icon, Avatar, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCardView = styled(CardView)`\r\n  position: relative;\r\n  margin-top: 32px;\r\n  width: 100%;\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 2px;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    left: 36px;\r\n    top: 55px;\r\n    bottom: 16px;\r\n  }\r\n`;\r\n\r\nconst TitleAvatar = styled(Avatar)`\r\n  border: 1px solid #c5d1c8;\r\n`;\r\n\r\nconst TitleIcon = styled(Icon)`\r\n  color: #6f7872;\r\n`;\r\n\r\nconst CardTitle = styled.span`\r\n  font-size: 20px;\r\n  font-family: Roboto;\r\n`;\r\n\r\nconst ContentTitle = styled.span`\r\n  font-size: 18px;\r\n  font-family: Roboto;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst TimeLineElement = styled.div`\r\n  position: relative;\r\n  padding-left: 42px;\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 3px;\r\n    left: 13px;\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 50%;\r\n    background: #2196f3;\r\n    border: 2px solid #fff;\r\n  }\r\n`;\r\n\r\nconst DateRange = styled(Typography)`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 15px;\r\n  font-family: Roboto;\r\n`;\r\n\r\nconst Description = styled(Typography)`\r\n  font-size: 16px;\r\n  font-family: Roboto;\r\n`;\r\n\r\nexport {\r\n  StyledCardView,\r\n  TitleAvatar,\r\n  TitleIcon,\r\n  CardTitle,\r\n  ContentTitle,\r\n  TimeLineElement,\r\n  DateRange,\r\n  Description\r\n};\r\n","import React, { FunctionComponent } from \"react\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Icon, Typography, CardContent } from \"@material-ui/core\";\r\nimport {\r\n  TimeLineElement,\r\n  CardTitle,\r\n  ContentTitle,\r\n  DateRange,\r\n  Description,\r\n  StyledCardView,\r\n  TitleAvatar,\r\n  TitleIcon\r\n} from \"./../styles/TimeLine.styles\";\r\n\r\nexport type TimeLineElement = {\r\n  title?: string;\r\n  dateRange?: string;\r\n  description?: React.ReactElement;\r\n};\r\n\r\nexport interface TimeLineCardProps {\r\n  title?: string;\r\n  icon?: string;\r\n  elements: TimeLineElement[];\r\n}\r\n\r\nconst TimeLine: FunctionComponent<TimeLineCardProps> = props => {\r\n  const elements: React.ReactElement[] = props.elements.map(\r\n    (element: TimeLineElement, index: number) => {\r\n      const marginTop: string = index ? \"32px\" : \"0\";\r\n      return (\r\n        <TimeLineElement key={`${element}-${index}`} style={{ marginTop: marginTop }}>\r\n          <Typography>\r\n            <ContentTitle>{element.title}</ContentTitle>\r\n          </Typography>\r\n          <DateRange variant=\"inherit\" color=\"textSecondary\">\r\n            <Icon style={{ fontSize: \"16px\", marginRight: \"8px\" }}>\r\n              calendar_today\r\n            </Icon>\r\n            {element.dateRange}\r\n          </DateRange>\r\n          <Description variant=\"inherit\">{element.description}</Description>\r\n        </TimeLineElement>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <StyledCardView>\r\n      <CardHeader\r\n        avatar={\r\n          <TitleAvatar style={{ backgroundColor: \"#ffffff\" }}>\r\n            <TitleIcon>{props.icon}</TitleIcon>\r\n          </TitleAvatar>\r\n        }\r\n        title={<CardTitle>{props.title}</CardTitle>}\r\n      ></CardHeader>\r\n      <CardContent>{elements}</CardContent>\r\n    </StyledCardView>\r\n  );\r\n};\r\n\r\nexport default TimeLine;\r\n","import devices from \"./../../devices/devices\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BoardContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #fafafa;\r\n  padding: 32px;\r\n  @media (max-width: ${devices.tablet}) {\r\n    padding: 16px;\r\n  }\r\n`;\r\n\r\nconst StyledBoard = styled.div`\r\n  width: 80%;\r\n  @media (max-width: ${devices.tablet}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ExperienceList = styled.ul`\r\n  padding-left: 24px;\r\n`;\r\n\r\nexport { BoardContainer, StyledBoard, ExperienceList };\r\n","import React, { FunctionComponent } from \"react\";\r\nimport AboutMeCard, { AboutMeCardProps } from \"./AboutMeCard\";\r\nimport TimeLine, { TimeLineElement } from \"./TimeLine\";\r\nimport {\r\n  ExperienceList,\r\n  BoardContainer,\r\n  StyledBoard\r\n} from \"./../styles/Board.styles\";\r\n\r\nconst aboutMeElements: AboutMeCardProps = {\r\n  welcomeText: \"Cze≈õƒá. Jestem Maciej!\",\r\n  aboutMeText:\r\n    \"Na co dzie≈Ñ zajmujƒô siƒô tworzeniem aplikacji internetowych wykorzystujƒÖcych jƒôzyk JavaScript oraz Java. Jestem absolwentem Politechniki Pozna≈Ñskiej, gdzie uzyska≈Çem tytu≈Ç in≈ºyniera na kierunku Informatyka. Aktualnie kontynuujƒô wspomniany kierunek na studiach drugiego stopnia. W pracy dbam o szczeg√≥≈Çy oraz przejrzysto≈õƒá kodu. Programowanie jest mojƒÖ pracƒÖ, ale r√≥wnie≈º pasjƒÖ.\"\r\n};\r\n\r\nconst experienceTimeLineElements: TimeLineElement[] = [\r\n  {\r\n    title: \"SNP Poland\",\r\n    dateRange: \"2019-07-01 - obecnie\",\r\n    description: (\r\n      <>\r\n        W SNP Poland zajmujƒô siƒô projektami, gdzie frontend oparty jest na\r\n        jƒôzyku JavaScript z wykorzystanie frameworka React, a backend na Javie\r\n        Spring. G≈Ç√≥wnymi projektami, nad kt√≥rymi pracowa≈Çem sƒÖ:\r\n        <ExperienceList>\r\n          <li>\r\n            <b>Biblioteka komponent√≥w</b>, w kt√≥rych by≈Çem odpowiedzialny za\r\n            stworzenie zbioru reactowych komponent√≥w, kt√≥re nastƒôpnie zosta≈Çy\r\n            wykorzystane w kolejnych projektach.\r\n          </li>\r\n          <li>\r\n            <b>System zarzƒÖdzania fakturami</b>, w kt√≥rym odpowiada≈Çem za\r\n            wykonanie crona w jƒôzyku Java, kt√≥ry raz dziennie wysy≈Ça≈Ç wszystkie\r\n            faktury na zdalny serwer sftp.\r\n          </li>\r\n          <li>\r\n            <b>System tworzenia i zarzƒÖdzania elektronicznymi dokumentami</b>,\r\n            gdzie wykona≈Çem czƒô≈õƒá projektu umo≈ºliwiajƒÖcƒÖ klientowi tworzenie\r\n            komponent√≥w, kt√≥re nastƒôpnie by≈Çy wykorzystane przy budowaniu\r\n            schemat√≥w elektronicznych dokument√≥w oraz odpowiada≈Çem za wykonanie\r\n            innych zada≈Ñ zwiƒÖzanych z widokami aplikacji internetowej.\r\n          </li>\r\n          <li>\r\n            <b>Partner Portal</b>,\r\n            w kt√≥rym by≈Çem odpowiedzialny implementacjƒô czƒô≈õci wizualnej aplikacji webowej,\r\n            stworzenie bazy danych przy u≈ºyciu silnika PostgreSQL, ≈ÇƒÖczno≈õƒá z bazƒÖ danych \r\n            we frameworku NestJS oraz zapewniania komunikacji aplikacji klienckiej z serwerem \r\n            wykorzystujƒÖc technologiƒô GraphQL.\r\n          </li>\r\n        </ExperienceList>\r\n      </>\r\n    )\r\n  },\r\n  {\r\n    title: \"F.H. Mogilmed\",\r\n    dateRange: \"2018-07-01 - 2018-10-01\",\r\n    description: (\r\n      <>\r\n        W firmie F.H. Mogilmed by≈Çem odpowiedzialny za obs≈Çugƒô programu Kamsoft\r\n        s≈Çu≈ºƒÖcego do zarzƒÖdzania aptekami.\r\n      </>\r\n    )\r\n  }\r\n];\r\n\r\nconst educationTimeLineElements: TimeLineElement[] = [\r\n  {\r\n    title: \"Politechnika Pozna≈Ñska\",\r\n    dateRange: \"2020-03-01 - obecnie\",\r\n    description: (\r\n      <>\r\n        Studia drugiego stopnia na kierunku Informatyka o specjalno≈õci gry i\r\n        technologie internetowe na wydziale Informatyki.\r\n      </>\r\n    )\r\n  },\r\n  {\r\n    title: \"Politechnika Pozna≈Ñska\",\r\n    dateRange: \"2016-10-01 - 2020-02-13\",\r\n    description: (\r\n      <>\r\n        Studia pierwszego stopnia na kierunku Informatyka na wydziale\r\n        Informatyki.\r\n      </>\r\n    )\r\n  },\r\n  {\r\n    title: \"Liceum og√≥lnokszta≈ÇcƒÖce w Mogilnie\",\r\n    dateRange: \"2013-09-01 - 2016-05-20\",\r\n    description: <>Profil matematyczno-fizyczny.</>\r\n  }\r\n];\r\n\r\nconst projectsTimeLineElements: TimeLineElement[] = [\r\n  {\r\n    title:\r\n      \"Alert! - spo≈Çeczno≈õciowy mobilny system powiadomie≈Ñ o wydarzeniach lokalnych\",\r\n    dateRange: \"2020\",\r\n    description: (\r\n      <>\r\n        Ten projekt to moja praca dyplomowa. Jest to aplikacja mobilna, kt√≥ra w\r\n        jednym miejscu gromadzi i udostƒôpnia u≈ºytkownikom informacje na temat\r\n        wypadk√≥w i awarii, a tak≈ºe wydarze≈Ñ kulturalnych i sportowych. W\r\n        projekcie by≈Çem odpowiedzialny za logikƒô oraz czƒô≈õƒá widok√≥w aplikacji\r\n        mobilnej napisanej w jƒôzyku Kotlin.\r\n      </>\r\n    )\r\n  }\r\n];\r\n\r\nconst Board: FunctionComponent<{}> = () => {\r\n  return (\r\n    <BoardContainer>\r\n      <StyledBoard>\r\n        <AboutMeCard {...aboutMeElements} />\r\n        <TimeLine\r\n          title=\"Do≈õwiadczenie\"\r\n          icon=\"work\"\r\n          elements={experienceTimeLineElements}\r\n        />\r\n        <TimeLine\r\n          title=\"Edukacja\"\r\n          icon=\"school\"\r\n          elements={educationTimeLineElements}\r\n        />\r\n        <TimeLine\r\n          title=\"Moje projekty\"\r\n          icon=\"school\"\r\n          elements={projectsTimeLineElements}\r\n        />\r\n      </StyledBoard>\r\n    </BoardContainer>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import styled from \"styled-components\";\r\nimport devices from \"./devices/devices\";\r\n\r\nconst StyledMain = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  @media (max-width: ${devices.mobile}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport { StyledMain };\r\n","import React from \"react\";\r\nimport SideMainElement from \"./side/components/SideMainElement\";\r\nimport Board from \"./board/components/Board\";\r\nimport { StyledMain } from \"./App.styles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <StyledMain>\r\n      <SideMainElement />\r\n      <Board />\r\n    </StyledMain>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './fonts/Roboto-Regular.ttf';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}